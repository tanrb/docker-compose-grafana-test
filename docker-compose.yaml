version: '3.11'

networks:
  loki:

services:
  influxdb:
    image: influxdb:1.8
    networks:
      - loki
    ports:
      - "8086:8086"
    environment:
      - INFLUXDB_DB=k6
  k6:
    image: grafana/k6:latest
    platform: linux/x86_64
    networks:
      - loki
    volumes:
      - ./scripts:/scripts
    depends_on:
      - mongo
      - influxdb
    environment:
      - K6_OUT=influxdb=http://influxdb:8086/k6    
  homepage_service:
    build: ./homepage_service
    ports:
      - "8001:80"
    depends_on:
      - mongo
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"

    networks:
      - loki
  database_service:
    build: ./database_service
    ports:
      - "8002:80"
    depends_on:
      - mongo
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"
      
    networks:
      - loki
  auth_service:
    build: ./auth_service
    ports:
      - "8003:80"
    depends_on:
      - mongo
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"
     
    networks:
      - loki
  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - loki
  loki:
    image: grafana/loki:2.4.1-arm
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - loki
  grafana:
    image: grafana/grafana:latest
    environment:
      - "GF_AUTH_DISABLE_LOGIN_FORM=true"
      - "GF_AUTH_ANONYMOUS_ENABLED=true"
      - "GF_AUTH_ANONYMOUS_ORG_ROLE=Admin"
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
          - name: Loki
            type: loki
            access: proxy
            url: http://loki:3100
        EOF
        /run.sh
    ports:
      - "3000:3000"
    depends_on:
      - loki
    networks:
      - loki
  promtail:
    image: grafana/promtail:2.8.0
    volumes:
      - ./promtail-local-config.yaml:/etc/promtail/config.yaml:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/config.yaml
    networks:
      - loki
  otelcol:
    image: otel/opentelemetry-collector-contrib:latest
    deploy:
      resources:
        limits:
          memory: 125M
    restart: unless-stopped
    command: [ "--config=/etc/otelcol-config.yaml" ]
    volumes:
      - ./otelcol-config.yaml:/etc/otelcol-config.yaml
      - ./logtest.json:/logtest.json
    ports:
      - "3500:3500" # loki receiver HTTP
      - "4137:4137" # http reciever
      - "9464:9464" # prometheus 
    networks:
      - loki
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - loki
volumes:
  mongo_data: